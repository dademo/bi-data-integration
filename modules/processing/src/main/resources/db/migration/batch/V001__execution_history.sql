DROP TABLE IF EXISTS BATCH_EXECUTION_ERROR CASCADE;
DROP TABLE IF EXISTS BATCH_EXECUTION_HISTORY CASCADE;
DROP TABLE IF EXISTS BATCH_EXECUTION_PROPERTY CASCADE;
DROP TABLE IF EXISTS BATCH_CUSTOM_METRIC CASCADE;


CREATE TABLE BATCH_EXECUTION_ERROR (
    ID                              SERIAL PRIMARY KEY NOT NULL,
    ERROR_NAME                      VARCHAR(255) NOT NULL,
    ERROR_ERROR                     TEXT,
    ERROR_LOCALIZED_ERROR           TEXT,
    ERROR_STACK_TRACE               TEXT
);

CREATE TABLE BATCH_EXECUTION_HISTORY (
    ID                              SERIAL PRIMARY KEY NOT NULL,
    BATCH_EXECUTION_ERROR_ID        INTEGER,
    EXECUTION_NAME                  VARCHAR(255) NOT NULL,
    EXECUTION_STATUS                VARCHAR(9) NOT NULL DEFAULT 'STARTING',
    EXECUTION_START                 TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    EXECUTION_END                   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
    EXECUTION_READ_COUNT            BIGINT NOT NULL,
    EXECUTION_WRITE_COUNT           BIGINT NOT NULL,
    EXECUTION_FILTER_COUNT          BIGINT NOT NULL,
    EXECUTION_ERROR_COUNT           BIGINT NOT NULL,
    FOREIGN KEY (BATCH_EXECUTION_ERROR_ID)
        REFERENCES BATCH_EXECUTION_ERROR(ID)
);

CREATE TABLE BATCH_EXECUTION_PROPERTY (
    ID                              SERIAL PRIMARY KEY NOT NULL,
    BATCH_EXECUTION_ID              INTEGER NOT NULL,
    PROPERTY_NAME                   VARCHAR(255),
    PROPERTY_VALUE                  TEXT,
    FOREIGN KEY (BATCH_EXECUTION_ID)
        REFERENCES BATCH_EXECUTION_HISTORY(ID)
);

CREATE TABLE BATCH_EXECUTION_CUSTOM_METRIC (
    ID                              SERIAL PRIMARY KEY NOT NULL,
    BATCH_EXECUTION_ID              INTEGER NOT NULL,
    METRIC_NAME                     VARCHAR(255) NOT NULL,
    METRIC_VALUE                    TEXT,
    FOREIGN KEY (BATCH_EXECUTION_ID)
        REFERENCES BATCH_EXECUTION_HISTORY(ID)
)
