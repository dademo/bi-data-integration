quarkus:
  arc:
    unremovable-types: com.fasterxml.jackson.databind.ObjectMapper
  datasource:
    stg:
      db-kind: postgresql
      username: bi_rw
      password: bi_rw
      jdbc:
        pooling-enabled: true
        url: jdbc:postgresql://localhost:5432/bi
        max-size: 16
      reactive: false
    #dwh:
    #  db-kind: postgresql
    #  username: bi_rw
    #  password: bi_rw
    #  jdbc:
    #    pooling-enabled: true
    #    url: jdbc:postgresql://localhost:5432/bi
    #    max-size: 16
    #dm_companies:
    #  db-kind: postgresql
    #  username: bi_rw
    #  password: bi_rw
    #  jdbc:
    #    pooling-enabled: true
    #    url: jdbc:postgresql://localhost:5432/bi
    #    max-size: 16
  hibernate-orm:
    stg:
      datasource: stg
      database:
        generation: none
        default-schema: stg
      jdbc:
        statement-batch-size: 10000
    #dwh:
    #  datasource: dwh
    #  database:
    #    generation: none
    #    default-schema: dwh
    #dm_companies:
    #  datasource: dm_companies
    #  database:
    #    generation: none
    #    default-schema: dm_companies
  flyway:
    stg:
      schemas: stg
      locations: 'classpath:db/migration/stg'
      create-schemas: false
      clean-at-start: true
      clean-disabled: false
      migrate-at-start: true
      baseline-on-migrate: true
    #dwh:
    #  schemas: dwh
    #  locations: 'classpath:db/migration/dwh'
    #  create-schemas: false
    #  clean-at-start: true
    #  clean-disabled: false
    #  migrate-at-start: true
    #  baseline-on-migrate: true
    #dm_companies:
    #  schemas: dm_companies
    #  locations: 'classpath:db/migration/dm_companies'
    #  create-schemas: false
    #  clean-at-start: true
    #  clean-disabled: false
    #  migrate-at-start: true
    #  baseline-on-migrate: true
  log:
    category:
      'fr.dademo.bi':
        level: DEBUG
      'org.flywaydb.core':
        level: DEBUG
      'okhttp3':
        level: DEBUG
      'camel_jobs':
        level: DEBUG

camel:
  # You can use a hard FS instead of memory if processing consume too much
  spool-directory: "${java.io.tmpdir}/camel/camel-tmp-#uuid#"
  jobs:
    naf:
      enabled: true
    companies-history:
      enabled: false
      batch-size: 100000
